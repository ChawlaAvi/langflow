"""Add MCP and action columns to Flow table

Revision ID: b5a9ef2d8814
Revises: 1b8b740a6fa3
Create Date: 2025-04-22 03:54:01.207954

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.engine.reflection import Inspector
from langflow.utils import migration


# revision identifiers, used by Alembic.
revision: str = 'b5a9ef2d8814'
down_revision: Union[str, None] = '1b8b740a6fa3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    conn = op.get_bind()
    inspector = sa.inspect(conn)  # type: ignore
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('flow', schema=None) as batch_op:
        flow_columns = [column["name"] for column in inspector.get_columns("flow")]
        if "mcp_enabled" not in flow_columns:
            batch_op.add_column(sa.Column('mcp_enabled', sa.Boolean(), nullable=True))
        if "action_name" not in flow_columns:
            batch_op.add_column(sa.Column('action_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
        if "action_description" not in flow_columns:
            batch_op.add_column(sa.Column('action_description', sa.Text(), nullable=True))

    # ### end Alembic commands ###


def downgrade() -> None:
    conn = op.get_bind()
    inspector = sa.inspect(conn)  # type: ignore
    
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('flow', schema=None) as batch_op:
        flow_columns = [column["name"] for column in inspector.get_columns("flow")]
        if "action_description" in flow_columns:
            batch_op.drop_column('action_description')
        if "action_name" in flow_columns:
            batch_op.drop_column('action_name')
        if "mcp_enabled" in flow_columns:
            batch_op.drop_column('mcp_enabled')

    # ### end Alembic commands ###
